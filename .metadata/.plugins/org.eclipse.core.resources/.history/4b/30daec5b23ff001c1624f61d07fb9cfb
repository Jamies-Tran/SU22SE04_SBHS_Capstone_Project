package com.swm.serviceImpl;

import java.util.Base64;
import java.util.List;

import javax.transaction.Transactional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.stereotype.Service;

import com.swm.entity.LandlordEntity;
import com.swm.entity.MomoOrderProcessEntity;
import com.swm.entity.UserEntity;
import com.swm.entity.WalletEntity;
import com.swm.exception.ResourceNotFoundException;
import com.swm.repository.IMomoProcessOrderRepository;
import com.swm.repository.IWalletRepository;
import com.swm.service.IUserService;
import com.swm.service.IWalletService;

@Service
public class WalletService implements IWalletService {
	@Autowired
	private IWalletRepository walletRepo;
	
	@Autowired
	private IMomoProcessOrderRepository momoProcessRepo;
	
	@Autowired
	private IUserService userService;

	@Transactional
	@Override
	public WalletEntity addWalletBalance(MomoOrderProcessEntity momoProcess) {
		String landlordUserName = new String(Base64.getDecoder().decode(momoProcess.getExtraData()));
		System.err.println(landlordUserName);
		UserEntity userEntity = userService.findUserByUsername(landlordUserName);
		MomoOrderProcessEntity momoPersisted = momoProcessRepo.save(momoProcess);
		LandlordEntity landLordEntity = userEntity.getLandlord();
		if(landLordEntity == null) {
			throw new ResourceNotFoundException("This is not landlord account");
		}
		WalletEntity walletEntity = landLordEntity.getWallet();
		Long currentBalance = walletEntity.getBalance();
		currentBalance = currentBalance + momoPersisted.getAmount();
		walletEntity.setBalance(currentBalance);
		walletEntity.setMomoOrderList(List.of(momoPersisted));
		momoPersisted.setWalletOrder(walletEntity);
			
		return walletEntity;
	}

}
